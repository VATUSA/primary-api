{
    "swagger": "2.0",
    "info": {
        "description": "VATUSAs public API",
        "title": "VATUSA API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "VATUSA Support",
            "url": "http://www.swagger.io/support",
            "email": "vatusa6@vatusa.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "basePath": "/v3",
    "paths": {
        "/events": {
            "get": {
                "description": "Get All Events (Paginated, default 10, limit 25)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get All Events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility": {
            "get": {
                "description": "Get all facilities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility"
                ],
                "summary": "Get all facilities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/facility.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}": {
            "get": {
                "description": "Get information for a specific facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility"
                ],
                "summary": "Get a specific facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/facility.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility"
                ],
                "summary": "Update a facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Facility",
                        "name": "facility",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/facility.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility"
                ],
                "summary": "Patch a facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Facility",
                        "name": "facility",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/facility.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/event-templates": {
            "get": {
                "description": "Get Event Templates by Facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Event Templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventTemplateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/event-templates/{EventTemplateID}": {
            "put": {
                "description": "Update an Event Template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Update an Event Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Template ID",
                        "name": "EventTemplateID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Template",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Event Template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Delete an Event Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Template ID",
                        "name": "EventTemplateID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events": {
            "get": {
                "description": "Get Events by Facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Create an Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/event.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/previous": {
            "get": {
                "description": "Get Previous Events by Facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Previous Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}": {
            "get": {
                "description": "Get Event by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Event by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Update Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Event by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Delete Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch Event by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Patch Event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}/positions": {
            "get": {
                "description": "Get Event Positions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Event Positions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventPositionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Event Position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Create an Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Position",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventPositionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/event.EventPositionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}/positions/{EventPositionID}": {
            "get": {
                "description": "Get Event Position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Position ID",
                        "name": "EventPositionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventPositionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Event Position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Delete an Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Position ID",
                        "name": "EventPositionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch an Event Position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Patch an Event Position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Position ID",
                        "name": "EventPositionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Position",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventPositionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventPositionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}/routing": {
            "get": {
                "description": "Get Event Routing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Event Routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventRoutingResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Event Routing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Create an Event Routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Routing",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventRoutingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/event.EventRoutingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}/routing/{EventRoutingID}": {
            "delete": {
                "description": "Delete an Event Routing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Delete an Event Routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Routing ID",
                        "name": "EventRoutingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch an Event Routing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Patch an Event Routing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Routing ID",
                        "name": "EventRoutingID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Routing",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventRoutingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventRoutingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}/signups": {
            "get": {
                "description": "Get Event Signups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get Event Signups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/event.EventSignupResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an Event Signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Create an Event Signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event Signup",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.EventSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/event.EventSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/events/{EventID}/signups/{EventSignupID}": {
            "get": {
                "description": "Get an Event Signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get an Event Signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Signup ID",
                        "name": "EventSignupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.EventSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an Event Signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Delete an Event Signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "EventID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Event Signup ID",
                        "name": "EventSignupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/faq": {
            "get": {
                "description": "List all FAQs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "List all FAQs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/faq.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new FAQ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Create a new FAQ",
                "parameters": [
                    {
                        "description": "FAQ",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faq.Request"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/faq.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/faq/{id}": {
            "put": {
                "description": "Update a FAQ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Update a FAQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FAQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "FAQ",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faq.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/faq.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a FAQ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Delete a FAQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FAQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a FAQ",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "faq"
                ],
                "summary": "Patch a FAQ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FAQ ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "FAQ",
                        "name": "faq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faq.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/faq.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/feedback": {
            "get": {
                "description": "List feedback entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "List feedback entries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feedback.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new feedback entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "Create a new feedback entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback Entry",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/feedback.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/feedback.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/feedback/{id}": {
            "put": {
                "description": "Update a feedback entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "Update a feedback entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback Entry",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/feedback.Request"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a feedback entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "Delete a feedback entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a feedback entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "Patch a feedback entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facility",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Feedback Entry",
                        "name": "feedback",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/feedback.Request"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/log": {
            "get": {
                "description": "List facility log entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility-log"
                ],
                "summary": "List facility log entries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/facility_log.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new facility log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility-log"
                ],
                "summary": "Create a new facility log entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Facility Log Entry",
                        "name": "facility_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility_log.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/facility_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/log/{id}": {
            "put": {
                "description": "Update a facility log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility-log"
                ],
                "summary": "Update a facility log entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Facility Log Entry",
                        "name": "facility_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility_log.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/facility_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a facility log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility-log"
                ],
                "summary": "Delete a facility log entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a facility log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility-log"
                ],
                "summary": "Patch a facility log entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Facility Log Entry",
                        "name": "facility_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility_log.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/facility_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/news": {
            "get": {
                "description": "List all news entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "List all news entries",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/news.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new news entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Create a new news entry",
                "parameters": [
                    {
                        "description": "News Entry",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/news.Request"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/news.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/news/{id}": {
            "put": {
                "description": "Update a news entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Update a news entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "News Entry",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/news.Request"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/news.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a news entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Delete a news entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a news entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Patch a news entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "News Entry",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/news.Request"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/news.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/reset-api-key": {
            "post": {
                "description": "Regenerate an API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "facility"
                ],
                "summary": "Regenerate an API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/roster": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get rosters by facility",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster"
                ],
                "summary": "Get rosters by facility",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "home",
                            "visiting"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roster.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a user to a roster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster"
                ],
                "summary": "Add user to roster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roster",
                        "name": "roster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/roster.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/roster.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/roster-request": {
            "get": {
                "description": "List all roster requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster-request"
                ],
                "summary": "List all roster requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "visiting",
                            "transferring"
                        ],
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "accepted",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roster_request.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new roster request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster-request"
                ],
                "summary": "Create a new roster request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roster Request",
                        "name": "roster_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/roster_request.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/roster_request.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/roster-request/{id}": {
            "put": {
                "description": "Update a roster request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster-request"
                ],
                "summary": "Update a roster request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Roster Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roster Request",
                        "name": "roster_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/roster_request.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roster_request.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a roster request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster-request"
                ],
                "summary": "Delete a roster request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Roster Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a roster request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster-request"
                ],
                "summary": "Patch a roster request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Roster Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roster Request",
                        "name": "roster_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/roster_request.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roster_request.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/facility/{FacilityID}/roster/{id}": {
            "delete": {
                "description": "Delete a roster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster"
                ],
                "summary": "Delete a roster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "FacilityID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Roster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "description": "Get information for the user logged in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get your user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/discord/unlink": {
            "get": {
                "description": "Unlink your Discord account from your VATUSA account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discord"
                ],
                "summary": "Unlink your Discord account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}": {
            "get": {
                "description": "Get information for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a specific user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "CID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update information for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "CID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch information for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Patch a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "CID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/action-log": {
            "get": {
                "description": "List all action log entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-log"
                ],
                "summary": "Get all action log entries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/action_log.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new action log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-log"
                ],
                "summary": "Create a new action log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action Log Entry",
                        "name": "action_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/action_log.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/action_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/action-log/{id}": {
            "put": {
                "description": "Update an action log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-log"
                ],
                "summary": "Update an action log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Action Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action Log Entry",
                        "name": "action_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/action_log.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/action_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an action log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-log"
                ],
                "summary": "Delete an action log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Action Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch an action log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-log"
                ],
                "summary": "Patch an action log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Action Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action Log Entry",
                        "name": "action_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/action_log.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/action_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/disciplinary-log": {
            "get": {
                "description": "List all disciplinary log entries",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disciplinary-log"
                ],
                "summary": "Get all disciplinary log entries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "VATUSA Only",
                        "name": "vatusa_only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/disciplinary_log.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new disciplinary log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disciplinary-log"
                ],
                "summary": "Create a new disciplinary log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disciplinary Log Entry",
                        "name": "action_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/disciplinary_log.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/disciplinary_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/disciplinary-log/{id}": {
            "put": {
                "description": "Update a disciplinary log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disciplinary-log"
                ],
                "summary": "Update a disciplinary log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Disciplinary Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disciplinary Log Entry",
                        "name": "disciplinary_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/disciplinary_log.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/disciplinary_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a disciplinary log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disciplinary-log"
                ],
                "summary": "Delete a disciplinary log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disciplinary Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch an disciplinary log entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "disciplinary-log"
                ],
                "summary": "Patch an disciplinary log entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Disciplinary Log Entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disciplinary Log Entry",
                        "name": "disciplinary_log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/disciplinary_log.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/disciplinary_log.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/feedback": {
            "get": {
                "description": "Get feedback entries for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedback"
                ],
                "summary": "Get accepted feedback entries for a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "CID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/feedback.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/notification": {
            "get": {
                "description": "List all notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "List all notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notification.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/notification-settings": {
            "get": {
                "description": "Get a user notification settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification-settings"
                ],
                "summary": "Get a user notification settings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_notification.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user notification settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification-settings"
                ],
                "summary": "Update a user's notifications settings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_notification.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_notification.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/notification/{id}": {
            "put": {
                "description": "Update a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Update a notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Delete a notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notification"
                ],
                "summary": "Patch a notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Notification",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notification.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notification.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/rating-change": {
            "get": {
                "description": "List rating changes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-change"
                ],
                "summary": "List rating changes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rating_change.Response"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new rating change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-change"
                ],
                "summary": "Create a new rating change",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating Change",
                        "name": "rating_change",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rating_change.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rating_change.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/rating-change/{id}": {
            "put": {
                "description": "Update a rating change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-change"
                ],
                "summary": "Update a rating change",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rating Change ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating Change",
                        "name": "rating_change",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rating_change.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rating_change.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a rating change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-change"
                ],
                "summary": "Delete a rating change",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Rating Change ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a rating change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rating-change"
                ],
                "summary": "Patch a rating change",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Rating Change ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating Change",
                        "name": "rating_change",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rating_change.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rating_change.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/roles": {
            "get": {
                "description": "Get roles for the user logged in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-roles"
                ],
                "summary": "Get your roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_role.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-roles"
                ],
                "summary": "Create a new user role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Role",
                        "name": "user_role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_role.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user_role.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/roles/{role_id}": {
            "delete": {
                "description": "Remove a user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-roles"
                ],
                "summary": "Remove a user role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/roster": {
            "get": {
                "description": "Get rosters by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roster"
                ],
                "summary": "Get rosters by user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roster.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user/{cid}/user-flag": {
            "get": {
                "description": "Get a user flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-flag"
                ],
                "summary": "Get a user flag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_flag.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-flag"
                ],
                "summary": "Update a user flag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Flag",
                        "name": "user_flag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_flag.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_flag.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-flag"
                ],
                "summary": "Delete a user flag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Patch a user flag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-flag"
                ],
                "summary": "Patch a user flag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CID",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Flag",
                        "name": "user_flag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_flag.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_flag.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "action_log.Request": {
            "type": "object",
            "required": [
                "entry"
            ],
            "properties": {
                "entry": {
                    "type": "string",
                    "example": "Changed Preferred OIs to RP"
                }
            }
        },
        "action_log.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "'1234567' or 'System'"
                },
                "entry": {
                    "type": "string",
                    "example": "Changed Preferred OIs to RP"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "'1234567' or 'System'"
                }
            }
        },
        "constants.ATCRating": {
            "type": "integer",
            "enum": [
                -1,
                0,
                1,
                2,
                3,
                4,
                5,
                7,
                8,
                10,
                11,
                12
            ],
            "x-enum-varnames": [
                "InactiveRating",
                "SuspendedRating",
                "ObserverRating",
                "Student1Rating",
                "Student2Rating",
                "Student3Rating",
                "ControllerRating",
                "SeniorControllerRating",
                "InstructorRating",
                "SeniorInstructorRating",
                "SupervisorRating",
                "AdministratorRating"
            ]
        },
        "constants.FacilityID": {
            "type": "string",
            "enum": [
                "ZAE",
                "ZHQ",
                "ZZN",
                "ZZI",
                "ZAB",
                "ZAN",
                "ZTL",
                "ZBW",
                "ZAU",
                "ZOB",
                "ZDV",
                "ZFW",
                "HCF",
                "ZHU",
                "ZID",
                "ZJX",
                "ZKC",
                "ZLA",
                "ZME",
                "ZMA",
                "ZMP",
                "ZNY",
                "ZOA",
                "ZLC",
                "ZSE",
                "ZDC"
            ],
            "x-enum-varnames": [
                "AcademyFacility",
                "HeadquartersFacility",
                "NonMemberFacility",
                "InactiveFacility",
                "AlbuquerqueFacility",
                "AnchorageFacility",
                "AtlantaFacility",
                "BostonFacility",
                "ChicagoFacility",
                "ClevelandFacility",
                "DenverFacility",
                "FortWorthFacility",
                "HonoluluFacility",
                "HoustonFacility",
                "IndianapolisFacility",
                "JacksonvilleFacility",
                "KansasCityFacility",
                "LosAngelesFacility",
                "MemphisFacility",
                "MiamiFacility",
                "MinneapolisFacility",
                "NewYorkFacility",
                "OaklandFacility",
                "SaltLakeFacility",
                "SeattleFacility",
                "WashingtonFacility"
            ]
        },
        "constants.PilotRating": {
            "type": "integer",
            "enum": [
                0,
                1,
                3,
                7,
                15,
                31,
                63
            ],
            "x-enum-varnames": [
                "NoRating",
                "PrivatePilotRating",
                "InstrumentRating",
                "CommercialMultiRating",
                "AirTransportRating",
                "FlightInstructorRating",
                "FlightExaminerRating"
            ]
        },
        "constants.RoleID": {
            "type": "string",
            "enum": [
                "ATM",
                "DATM",
                "TA",
                "EC",
                "AEC",
                "FE",
                "AFE",
                "WM",
                "AWM",
                "INS",
                "MTR",
                "USA1",
                "USA2",
                "USA3",
                "USA4",
                "USA5",
                "USA6",
                "USA7",
                "USA8",
                "USA9",
                "DEV",
                "ACE",
                "NTMS",
                "NTMT",
                "SMT",
                "TCT",
                "CBT",
                "FACCBT",
                "EMAIL"
            ],
            "x-enum-varnames": [
                "AirTrafficManagerRole",
                "DeputyAirTrafficManagerRole",
                "TrainingAdministratorRole",
                "EventCoordinatorRole",
                "AssistantEventCoordinator",
                "FacilityEngineerRole",
                "AssistantFacilityEngineer",
                "WebMasterRole",
                "AssistantWebMasterRole",
                "InstructorRole",
                "MentorRole",
                "DivisionDirectorRole",
                "AirTrafficServicesRole",
                "TrainingServicesRole",
                "SupportServicesRole",
                "EventsManagerRole",
                "TechnicalManagerRole",
                "StaffDevelopmentManagerRole",
                "TrainingServicesManagerRole",
                "TrainingContentManagerRole",
                "DeveloperTeamRole",
                "AceTeamRole",
                "NTMSRole",
                "NTMTRole",
                "SocialMediaTeam",
                "TrainingContentTeam",
                "AcademyMaterialEditor",
                "FacilityMaterialEditor",
                "EmailUser"
            ]
        },
        "disciplinary_log.Request": {
            "type": "object",
            "required": [
                "entry"
            ],
            "properties": {
                "entry": {
                    "type": "string",
                    "example": "Misconduct in discord"
                },
                "vatusa_only": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "disciplinary_log.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "'1234567' or 'System'"
                },
                "entry": {
                    "type": "string",
                    "example": "Changed Preferred OIs to RP"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "'1234567' or 'System'"
                },
                "vatusa_only": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "event.EventPositionRequest": {
            "type": "object",
            "required": [
                "position"
            ],
            "properties": {
                "assignee": {
                    "type": "integer",
                    "example": 1293257
                },
                "position": {
                    "type": "string",
                    "example": "ZDV_APP"
                },
                "secondary_assignee": {
                    "type": "integer",
                    "example": 1293257
                },
                "shifts": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "event.EventPositionResponse": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "integer",
                    "example": 1293257
                },
                "assignee_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "event_id": {
                    "type": "integer",
                    "example": 1
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "position": {
                    "type": "string",
                    "example": "ZDV_APP"
                },
                "secondary_assignee": {
                    "type": "integer",
                    "example": 1293257
                },
                "secondary_assignee_name": {
                    "type": "string",
                    "example": "Jane Doe"
                },
                "shifts": {
                    "type": "boolean",
                    "example": true
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventSignup"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "event.EventRequest": {
            "type": "object",
            "required": [
                "description",
                "end_date",
                "facilities",
                "fields",
                "start_date",
                "title"
            ],
            "properties": {
                "banner_url": {
                    "type": "string",
                    "example": "https://zdvartcc.org/banner.jpg"
                },
                "description": {
                    "type": "string",
                    "example": "Join us for a fun night of flying in and out of Denver!"
                },
                "end_date": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/constants.FacilityID"
                    },
                    "example": [
                        "ZDV"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "KDEN"
                    ]
                },
                "start_date": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "ZDV FNO"
                }
            }
        },
        "event.EventResponse": {
            "type": "object",
            "properties": {
                "banner_url": {
                    "type": "string",
                    "example": "https://zdvartcc.org/banner.jpg"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Join us for a fun night of flying in and out of Denver!"
                },
                "end_date": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/constants.FacilityID"
                    },
                    "example": [
                        "[\"ZDV\"",
                        " \"ZAB\"",
                        " \"ZLC\"]"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"KDEN\"",
                        " \"KBJC\"",
                        " \"KAPA\"]"
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventPosition"
                    }
                },
                "routing": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventRouting"
                    }
                },
                "start_date": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "ZDV FNO"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "event.EventRoutingRequest": {
            "type": "object",
            "required": [
                "destination",
                "notes",
                "origin",
                "routing"
            ],
            "properties": {
                "destination": {
                    "type": "string",
                    "example": "ZAB"
                },
                "notes": {
                    "type": "string",
                    "example": "Expect vectors to final at DBL"
                },
                "origin": {
                    "type": "string",
                    "example": "ZDV"
                },
                "routing": {
                    "type": "string",
                    "example": "ZDV J80 DBL J80 FQF J80 HCT J80 HBU J80 HCT J80 FQF J80 DBL J80 ZAB"
                }
            }
        },
        "event.EventRoutingResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "destination": {
                    "type": "string",
                    "example": "KDEN"
                },
                "event_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "notes": {
                    "type": "string",
                    "example": "JETS ONLY"
                },
                "origin": {
                    "type": "string",
                    "example": "KLAX"
                },
                "routing": {
                    "type": "string",
                    "example": "DCT"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "event.EventSignupRequest": {
            "type": "object",
            "required": [
                "cid",
                "position_id",
                "shift"
            ],
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "position_id": {
                    "type": "integer",
                    "example": 1
                },
                "shift": {
                    "description": "1 = Primary, 2 = Secondary",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "event.EventSignupResponse": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "event_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "example": 1
                },
                "shift": {
                    "description": "1 = Primary, 2 = Secondary",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "event.EventTemplateRequest": {
            "type": "object",
            "required": [
                "facilities",
                "fields",
                "positions",
                "title"
            ],
            "properties": {
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/constants.FacilityID"
                    },
                    "example": [
                        "ZDV"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "KDEN"
                    ]
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "ZDV_APP"
                    ]
                },
                "shifts": {
                    "type": "boolean",
                    "example": true
                },
                "title": {
                    "type": "string",
                    "example": "KDEN FNO"
                }
            }
        },
        "event.EventTemplateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/constants.FacilityID"
                    },
                    "example": [
                        "[\"ZDV\"",
                        " \"ZAB\"",
                        " \"ZLC\"]"
                    ]
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"KDEN\"",
                        " \"KBJC\"",
                        " \"KAPA\"]"
                    ]
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "positions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"ZDV_APP\"",
                        " \"ZDV_TWR\"]"
                    ]
                },
                "shifts": {
                    "type": "boolean",
                    "example": true
                },
                "title": {
                    "type": "string",
                    "example": "KDEN FNO Template"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "facility.Request": {
            "type": "object",
            "required": [
                "about",
                "name",
                "url",
                "webhook_url"
            ],
            "properties": {
                "about": {
                    "type": "string",
                    "example": "Seattle ARTCC contains ZSE... etc. etc. etc."
                },
                "name": {
                    "type": "string",
                    "example": "Seattle ARTCC"
                },
                "url": {
                    "type": "string",
                    "example": "https://zseartcc.org"
                },
                "webhook_url": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "facility.Response": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string",
                    "example": "Denver ARTCC contains ZDV... etc. etc. etc."
                },
                "id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "name": {
                    "type": "string",
                    "example": "Denver ARTCC"
                },
                "url": {
                    "type": "string",
                    "example": "https://zdvartcc.org"
                },
                "webhook_url": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "facility_log.Request": {
            "type": "object",
            "required": [
                "entry",
                "facility"
            ],
            "properties": {
                "entry": {
                    "type": "string",
                    "example": "Changed Preferred OIs to RP"
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                }
            }
        },
        "facility_log.Response": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "'1234567' or 'System'"
                },
                "entry": {
                    "type": "string",
                    "example": "Change URL from 'denartcc.org' to 'zdvartcc.org'"
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "'1234567' or 'System'"
                }
            }
        },
        "faq.Request": {
            "type": "object",
            "required": [
                "answer",
                "category",
                "question"
            ],
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "You should join ZDV."
                },
                "category": {
                    "type": "string",
                    "enum": [
                        "membership",
                        "training",
                        "technology",
                        "misc"
                    ],
                    "example": "membership"
                },
                "question": {
                    "type": "string",
                    "example": "What ARTCC should I join?"
                }
            }
        },
        "faq.Response": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "There are no reasons not to join ZDV!"
                },
                "category": {
                    "type": "string",
                    "example": "membership"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "created_by": {
                    "type": "integer",
                    "example": 1293257
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "question": {
                    "type": "string",
                    "example": "Why shouldn't I join ZDV?'"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "updated_by": {
                    "type": "integer",
                    "example": 1293257
                }
            }
        },
        "feedback.Request": {
            "type": "object",
            "required": [
                "callsign",
                "controller_cid",
                "feedback",
                "pilot_cid",
                "position",
                "rating",
                "status"
            ],
            "properties": {
                "callsign": {
                    "type": "string",
                    "example": "DAL123"
                },
                "comment": {
                    "type": "string",
                    "example": "Great work Raaj!"
                },
                "controller_cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "feedback": {
                    "type": "string",
                    "example": "Raaj was the best controller I've ever flown under."
                },
                "pilot_cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "position": {
                    "type": "string",
                    "example": "DEN_I_APP"
                },
                "rating": {
                    "enum": [
                        "unsatisfactory",
                        "poor",
                        "fair",
                        "good",
                        "excellent"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.FeedbackRating"
                        }
                    ],
                    "example": "good"
                },
                "status": {
                    "enum": [
                        "pending",
                        "approved",
                        "denied"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.StatusType"
                        }
                    ],
                    "example": "pending"
                }
            }
        },
        "feedback.Response": {
            "type": "object",
            "properties": {
                "callsign": {
                    "type": "string",
                    "example": "DAL123"
                },
                "comment": {
                    "type": "string",
                    "example": "Great work Raaj!"
                },
                "controller_cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "controller_first_name": {
                    "type": "string",
                    "example": "John"
                },
                "controller_last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "feedback": {
                    "type": "string",
                    "example": "Raaj was the best controller I've ever flown under."
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "pilot_cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "position": {
                    "type": "string",
                    "example": "DEN_I_APP"
                },
                "rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.FeedbackRating"
                        }
                    ],
                    "example": "good"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.StatusType"
                        }
                    ],
                    "example": "pending"
                }
            }
        },
        "models.EventPosition": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "event_id": {
                    "type": "integer",
                    "example": 1
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "position": {
                    "type": "string",
                    "example": "ZDV_APP"
                },
                "secondary_assignee": {
                    "type": "integer",
                    "example": 1293257
                },
                "shifts": {
                    "type": "boolean",
                    "example": true
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EventSignup"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "models.EventRouting": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "destination": {
                    "type": "string",
                    "example": "KDEN"
                },
                "event_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "notes": {
                    "type": "string",
                    "example": "JETS ONLY"
                },
                "origin": {
                    "type": "string",
                    "example": "KLAX"
                },
                "routing": {
                    "type": "string",
                    "example": "DCT"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "models.EventSignup": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "event_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "example": 1
                },
                "shift": {
                    "description": "1 = Primary, 2 = Secondary",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "models.UserFlag": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "no_staff_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_staff_role": {
                    "type": "boolean",
                    "example": false
                },
                "no_training": {
                    "type": "boolean",
                    "example": false
                },
                "no_training_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_transferring": {
                    "type": "boolean",
                    "example": false
                },
                "no_transferring_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_visiting": {
                    "type": "boolean",
                    "example": false
                },
                "no_visiting_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "used_transfer_override": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.UserRole": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facility_id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "role": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.RoleID"
                        }
                    ],
                    "example": "ATM"
                },
                "roster_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "news.Request": {
            "type": "object",
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "DP001 has been revised to include new information regarding the new VATSIM Code of Conduct"
                },
                "title": {
                    "type": "string",
                    "example": "DP001 Revision 3 Released"
                }
            }
        },
        "news.Response": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "DP001 has been revised to include new information regarding the new VATSIM Code of Conduct"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "'1293257' or 'System'"
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "news": {
                    "type": "string",
                    "example": "DP001 Revision 3 Released"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "1293257"
                }
            }
        },
        "notification.Request": {
            "type": "object",
            "required": [
                "body",
                "category",
                "expire_at",
                "title"
            ],
            "properties": {
                "body": {
                    "type": "string",
                    "example": "You have a training session coming up."
                },
                "category": {
                    "type": "string",
                    "example": "Training"
                },
                "expire_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "title": {
                    "type": "string",
                    "example": "Upcoming Training Session"
                }
            }
        },
        "notification.Response": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "You have a training session coming up."
                },
                "category": {
                    "type": "string",
                    "example": "Training"
                },
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "expire_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Upcoming Training Session"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "rating_change.Request": {
            "type": "object",
            "required": [
                "new_rating",
                "old_rating"
            ],
            "properties": {
                "new_rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.ATCRating"
                        }
                    ],
                    "example": 2
                },
                "old_rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.ATCRating"
                        }
                    ],
                    "example": 1
                }
            }
        },
        "rating_change.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "created_by_cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "new_rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.ATCRating"
                        }
                    ],
                    "example": 2
                },
                "old_rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.ATCRating"
                        }
                    ],
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "roster.Request": {
            "type": "object",
            "required": [
                "cid",
                "operating_initials",
                "status"
            ],
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 123456
                },
                "home": {
                    "type": "boolean",
                    "example": true
                },
                "operating_initials": {
                    "type": "string",
                    "example": "RP"
                },
                "status": {
                    "description": "Active, LOA",
                    "type": "string",
                    "enum": [
                        "active",
                        "loa"
                    ],
                    "example": "Active"
                },
                "visiting": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "roster.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "deleted_at": {
                    "description": "Soft Deletes for logging",
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "first_name": {
                    "type": "string"
                },
                "home": {
                    "type": "boolean",
                    "example": true
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string"
                },
                "operating_initials": {
                    "type": "string",
                    "example": "RP"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserRole"
                    }
                },
                "status": {
                    "description": "Active, LOA",
                    "type": "string",
                    "example": "Active"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "visiting": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "roster_request.Request": {
            "type": "object",
            "required": [
                "cid",
                "reason",
                "request_type",
                "status"
            ],
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 123456
                },
                "reason": {
                    "type": "string",
                    "example": "I want to transfer to ZDV"
                },
                "request_type": {
                    "enum": [
                        "visiting",
                        "transferring"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.RequestType"
                        }
                    ],
                    "example": "visiting"
                },
                "status": {
                    "enum": [
                        "pending",
                        "accepted",
                        "rejected"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.StatusType"
                        }
                    ],
                    "example": "pending"
                }
            }
        },
        "roster_request.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "reason": {
                    "type": "string",
                    "example": "I want to transfer to ZDV"
                },
                "request_type": {
                    "$ref": "#/definitions/types.RequestType"
                },
                "status": {
                    "$ref": "#/definitions/types.StatusType"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "types.FeedbackRating": {
            "type": "string",
            "enum": [
                "unsatisfactory",
                "poor",
                "fair",
                "good",
                "excellent"
            ],
            "x-enum-varnames": [
                "Unsatisfactory",
                "Poor",
                "Fair",
                "Good",
                "Excellent"
            ]
        },
        "types.RequestType": {
            "type": "string",
            "enum": [
                "visiting",
                "transferring"
            ],
            "x-enum-varnames": [
                "Visiting",
                "Transferring"
            ]
        },
        "types.StatusType": {
            "type": "string",
            "enum": [
                "",
                "pending",
                "accepted",
                "rejected"
            ],
            "x-enum-varnames": [
                "All",
                "Pending",
                "Accepted",
                "Rejected"
            ]
        },
        "user.Request": {
            "type": "object",
            "required": [
                "discord_id",
                "preferred_name",
                "preferred_ois"
            ],
            "properties": {
                "discord_id": {
                    "type": "string",
                    "example": "1234567890"
                },
                "preferred_name": {
                    "type": "string",
                    "example": "Raaj"
                },
                "preferred_ois": {
                    "type": "string",
                    "example": "RP"
                }
            }
        },
        "user.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "controller_rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.ATCRating"
                        }
                    ],
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "discord_id": {
                    "type": "string",
                    "example": "1234567890"
                },
                "email": {
                    "type": "string",
                    "example": "vatusa6@vatusa.net"
                },
                "first_name": {
                    "type": "string",
                    "example": "Raaj"
                },
                "flags": {
                    "$ref": "#/definitions/models.UserFlag"
                },
                "last_cert_sync": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "last_login": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "last_name": {
                    "type": "string",
                    "example": "Patel"
                },
                "pilot_rating": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.PilotRating"
                        }
                    ],
                    "example": 1
                },
                "pref_name_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "preferred_name": {
                    "type": "string",
                    "example": "Raaj"
                },
                "preferred_ois": {
                    "type": "string",
                    "example": "RP"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "user_flag.Request": {
            "type": "object",
            "properties": {
                "no_staff_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_staff_role": {
                    "type": "boolean",
                    "example": false
                },
                "no_training": {
                    "type": "boolean",
                    "example": false
                },
                "no_training_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_transferring": {
                    "type": "boolean",
                    "example": false
                },
                "no_transferring_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_visiting": {
                    "type": "boolean",
                    "example": false
                },
                "no_visiting_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "used_transfer_override": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "user_flag.Response": {
            "type": "object",
            "properties": {
                "cid": {
                    "type": "integer",
                    "example": 1293257
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "no_staff_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_staff_role": {
                    "type": "boolean",
                    "example": false
                },
                "no_training": {
                    "type": "boolean",
                    "example": false
                },
                "no_training_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_transferring": {
                    "type": "boolean",
                    "example": false
                },
                "no_transferring_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "no_visiting": {
                    "type": "boolean",
                    "example": false
                },
                "no_visiting_log_entry_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "used_transfer_override": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "user_notification.Request": {
            "type": "object",
            "required": [
                "discord",
                "email",
                "events",
                "feedback",
                "training"
            ],
            "properties": {
                "discord": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "type": "boolean",
                    "example": true
                },
                "events": {
                    "type": "boolean",
                    "example": true
                },
                "feedback": {
                    "type": "boolean",
                    "example": true
                },
                "training": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "user_notification.Response": {
            "type": "object",
            "properties": {
                "discord": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "type": "boolean",
                    "example": true
                },
                "events": {
                    "type": "boolean",
                    "example": true
                },
                "feedback": {
                    "type": "boolean",
                    "example": true
                },
                "training": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "user_role.Request": {
            "type": "object",
            "required": [
                "facility_id",
                "role_id"
            ],
            "properties": {
                "facility_id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "role_id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.RoleID"
                        }
                    ],
                    "example": "ATM"
                }
            }
        },
        "user_role.Response": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "facility_id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.FacilityID"
                        }
                    ],
                    "example": "ZDV"
                },
                "role_id": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/constants.RoleID"
                        }
                    ],
                    "example": "ATM"
                }
            }
        },
        "utils.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "application-specific error code",
                    "type": "integer"
                },
                "error": {
                    "description": "application-level error message, for debugging",
                    "type": "string"
                },
                "status": {
                    "description": "user-level status message",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        }
    }
}