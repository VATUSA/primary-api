basePath: /v3
definitions:
  action_log.Request:
    properties:
      entry:
        example: Changed Preferred OIs to RP
        type: string
    required:
    - entry
    type: object
  action_log.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1234567'' or ''System'''
        type: string
      entry:
        example: Changed Preferred OIs to RP
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: '''1234567'' or ''System'''
        type: string
    type: object
  constants.ATCRating:
    enum:
    - -1
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 7
    - 8
    - 10
    - 11
    - 12
    type: integer
    x-enum-varnames:
    - InactiveRating
    - SuspendedRating
    - ObserverRating
    - Student1Rating
    - Student2Rating
    - Student3Rating
    - ControllerRating
    - SeniorControllerRating
    - InstructorRating
    - SeniorInstructorRating
    - SupervisorRating
    - AdministratorRating
  constants.FacilityID:
    enum:
    - ZAE
    - ZHQ
    - ZZN
    - ZZI
    - ZAB
    - ZAN
    - ZTL
    - ZBW
    - ZAU
    - ZOB
    - ZDV
    - ZFW
    - HCF
    - ZHU
    - ZID
    - ZJX
    - ZKC
    - ZLA
    - ZME
    - ZMA
    - ZMP
    - ZNY
    - ZOA
    - ZLC
    - ZSE
    - ZDC
    type: string
    x-enum-varnames:
    - AcademyFacility
    - HeadquartersFacility
    - NonMemberFacility
    - InactiveFacility
    - AlbuquerqueFacility
    - AnchorageFacility
    - AtlantaFacility
    - BostonFacility
    - ChicagoFacility
    - ClevelandFacility
    - DenverFacility
    - FortWorthFacility
    - HonoluluFacility
    - HoustonFacility
    - IndianapolisFacility
    - JacksonvilleFacility
    - KansasCityFacility
    - LosAngelesFacility
    - MemphisFacility
    - MiamiFacility
    - MinneapolisFacility
    - NewYorkFacility
    - OaklandFacility
    - SaltLakeFacility
    - SeattleFacility
    - WashingtonFacility
  constants.PilotRating:
    enum:
    - 0
    - 1
    - 3
    - 7
    - 15
    - 31
    - 63
    type: integer
    x-enum-varnames:
    - NoRating
    - PrivatePilotRating
    - InstrumentRating
    - CommercialMultiRating
    - AirTransportRating
    - FlightInstructorRating
    - FlightExaminerRating
  constants.RoleID:
    enum:
    - ATM
    - DATM
    - TA
    - EC
    - AEC
    - FE
    - AFE
    - WM
    - AWM
    - INS
    - MTR
    - USA1
    - USA2
    - USA3
    - USA4
    - USA5
    - USA6
    - USA7
    - USA8
    - USA9
    - DEV
    - ACE
    - NTMS
    - NTMT
    - SMT
    - TCT
    - CBT
    - FACCBT
    - EMAIL
    type: string
    x-enum-varnames:
    - AirTrafficManagerRole
    - DeputyAirTrafficManagerRole
    - TrainingAdministratorRole
    - EventCoordinatorRole
    - AssistantEventCoordinator
    - FacilityEngineerRole
    - AssistantFacilityEngineer
    - WebMasterRole
    - AssistantWebMasterRole
    - InstructorRole
    - MentorRole
    - DivisionDirectorRole
    - AirTrafficServicesRole
    - TrainingServicesRole
    - SupportServicesRole
    - EventsManagerRole
    - TechnicalManagerRole
    - StaffDevelopmentManagerRole
    - TrainingServicesManagerRole
    - TrainingContentManagerRole
    - DeveloperTeamRole
    - AceTeamRole
    - NTMSRole
    - NTMTRole
    - SocialMediaTeam
    - TrainingContentTeam
    - AcademyMaterialEditor
    - FacilityMaterialEditor
    - EmailUser
  disciplinary_log.Request:
    properties:
      entry:
        example: Misconduct in discord
        type: string
      vatusa_only:
        example: true
        type: boolean
    required:
    - entry
    type: object
  disciplinary_log.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1234567'' or ''System'''
        type: string
      entry:
        example: Changed Preferred OIs to RP
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: '''1234567'' or ''System'''
        type: string
      vatusa_only:
        example: true
        type: boolean
    type: object
  facility.Request:
    properties:
      name:
        example: Seattle ARTCC
        type: string
      url:
        example: https://zseartcc.org
        type: string
    required:
    - name
    - url
    type: object
  facility.Response:
    properties:
      id:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      name:
        example: Denver ARTCC
        type: string
      url:
        example: https://zdvartcc.org
        type: string
    type: object
  facility_log.Request:
    properties:
      entry:
        example: Changed Preferred OIs to RP
        type: string
      facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
    required:
    - entry
    - facility
    type: object
  facility_log.Response:
    properties:
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1234567'' or ''System'''
        type: string
      entry:
        example: Change URL from 'denartcc.org' to 'zdvartcc.org'
        type: string
      facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: '''1234567'' or ''System'''
        type: string
    type: object
  faq.Request:
    properties:
      answer:
        example: You should join ZDV.
        type: string
      category:
        enum:
        - membership
        - training
        - technology
        - misc
        example: membership
        type: string
      question:
        example: What ARTCC should I join?
        type: string
    required:
    - answer
    - category
    - question
    type: object
  faq.Response:
    properties:
      answer:
        example: There are no reasons not to join ZDV!
        type: string
      category:
        example: membership
        type: string
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: 1293257
        type: integer
      facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      id:
        example: 1
        type: integer
      question:
        example: Why shouldn't I join ZDV?'
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: 1293257
        type: integer
    type: object
  feedback.Request:
    properties:
      callsign:
        example: DAL123
        type: string
      comment:
        example: Great work Raaj!
        type: string
      controller_cid:
        example: 1293257
        type: integer
      notes:
        example: Raaj was the best controller I've ever flown under.
        type: string
      pilot_cid:
        example: 1293257
        type: integer
      position:
        example: DEN_I_APP
        type: string
      rating:
        allOf:
        - $ref: '#/definitions/types.FeedbackRating'
        enum:
        - unsatisfactory
        - poor
        - fair
        - good
        - excellent
        example: good
      status:
        allOf:
        - $ref: '#/definitions/types.StatusType'
        enum:
        - pending
        - approved
        - denied
        example: pending
    required:
    - callsign
    - controller_cid
    - notes
    - pilot_cid
    - position
    - rating
    - status
    type: object
  feedback.Response:
    properties:
      comment:
        example: Great work Raaj!
        type: string
      controller_cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      id:
        example: 1
        type: integer
      notes:
        example: Raaj was the best controller I've ever flown under.
        type: string
      position:
        example: DEN_I_APP
        type: string
      rating:
        allOf:
        - $ref: '#/definitions/types.FeedbackRating'
        example: good
      status:
        allOf:
        - $ref: '#/definitions/types.StatusType'
        example: pending
    type: object
  models.UserFlag:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      no_staff_log_entry_id:
        example: 1
        type: integer
      no_staff_role:
        example: false
        type: boolean
      no_training:
        example: false
        type: boolean
      no_training_log_entry_id:
        example: 1
        type: integer
      no_transferring:
        example: false
        type: boolean
      no_transferring_log_entry_id:
        example: 1
        type: integer
      no_visiting:
        example: false
        type: boolean
      no_visiting_log_entry_id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      used_transfer_override:
        example: false
        type: boolean
    type: object
  models.UserRole:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      facility_id:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      id:
        example: 1
        type: integer
      role:
        allOf:
        - $ref: '#/definitions/constants.RoleID'
        example: ATM
      roster_id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  news.Request:
    properties:
      description:
        example: DP001 has been revised to include new information regarding the new
          VATSIM Code of Conduct
        type: string
      title:
        example: DP001 Revision 3 Released
        type: string
    required:
    - description
    - title
    type: object
  news.Response:
    properties:
      answer:
        example: DP001 has been revised to include new information regarding the new
          VATSIM Code of Conduct
        type: string
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by:
        example: '''1293257'' or ''System'''
        type: string
      facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      id:
        example: 1
        type: integer
      news:
        example: DP001 Revision 3 Released
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      updated_by:
        example: "1293257"
        type: string
    type: object
  notification.Request:
    properties:
      body:
        example: You have a training session coming up.
        type: string
      category:
        example: Training
        type: string
      expire_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      title:
        example: Upcoming Training Session
        type: string
    required:
    - body
    - category
    - expire_at
    - title
    type: object
  notification.Response:
    properties:
      body:
        example: You have a training session coming up.
        type: string
      category:
        example: Training
        type: string
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      expire_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      title:
        example: Upcoming Training Session
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  rating_change.Request:
    properties:
      new_rating:
        allOf:
        - $ref: '#/definitions/constants.ATCRating'
        example: 2
      old_rating:
        allOf:
        - $ref: '#/definitions/constants.ATCRating'
        example: 1
    required:
    - new_rating
    - old_rating
    type: object
  rating_change.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      created_by_cid:
        example: 1293257
        type: integer
      id:
        example: 1
        type: integer
      new_rating:
        allOf:
        - $ref: '#/definitions/constants.ATCRating'
        example: 2
      old_rating:
        allOf:
        - $ref: '#/definitions/constants.ATCRating'
        example: 1
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  roster.Request:
    properties:
      cid:
        example: 123456
        type: integer
      home:
        example: true
        type: boolean
      operating_initials:
        example: RP
        type: string
      status:
        description: Active, LOA
        enum:
        - active
        - loa
        example: Active
        type: string
      visiting:
        example: false
        type: boolean
    required:
    - cid
    - operating_initials
    - status
    type: object
  roster.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      deleted_at:
        description: Soft Deletes for logging
        example: "2021-01-01T00:00:00Z"
        type: string
      facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      home:
        example: true
        type: boolean
      id:
        example: 1
        type: integer
      operating_initials:
        example: RP
        type: string
      roles:
        items:
          $ref: '#/definitions/models.UserRole'
        type: array
      status:
        description: Active, LOA
        example: Active
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      visiting:
        example: false
        type: boolean
    type: object
  roster_request.Request:
    properties:
      cid:
        example: 123456
        type: integer
      reason:
        example: I want to transfer to ZDV
        type: string
      request_type:
        allOf:
        - $ref: '#/definitions/types.RequestType'
        enum:
        - visiting
        - transferring
        example: visiting
      status:
        allOf:
        - $ref: '#/definitions/types.StatusType'
        enum:
        - pending
        - accepted
        - rejected
        example: pending
    required:
    - cid
    - reason
    - request_type
    - status
    type: object
  roster_request.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      reason:
        example: I want to transfer to ZDV
        type: string
      requestType:
        $ref: '#/definitions/types.RequestType'
      requested_facility:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      status:
        $ref: '#/definitions/types.StatusType'
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  types.FeedbackRating:
    enum:
    - unsatisfactory
    - poor
    - fair
    - good
    - excellent
    type: string
    x-enum-varnames:
    - Unsatisfactory
    - Poor
    - Fair
    - Good
    - Excellent
  types.RequestType:
    enum:
    - visiting
    - transferring
    type: string
    x-enum-varnames:
    - Visiting
    - Transferring
  types.StatusType:
    enum:
    - ""
    - pending
    - accepted
    - rejected
    type: string
    x-enum-varnames:
    - All
    - Pending
    - Accepted
    - Rejected
  user.Request:
    properties:
      discord_id:
        example: "1234567890"
        type: string
      preferred_name:
        example: Raaj
        type: string
      preferred_ois:
        example: RP
        type: string
    required:
    - discord_id
    - preferred_name
    - preferred_ois
    type: object
  user.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      controller_rating:
        allOf:
        - $ref: '#/definitions/constants.ATCRating'
        example: 1
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      discord_id:
        example: "1234567890"
        type: string
      email:
        example: vatusa6@vatusa.net
        type: string
      first_name:
        example: Raaj
        type: string
      flags:
        $ref: '#/definitions/models.UserFlag'
      last_cert_sync:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_login:
        example: "2021-01-01T00:00:00Z"
        type: string
      last_name:
        example: Patel
        type: string
      pilot_rating:
        allOf:
        - $ref: '#/definitions/constants.PilotRating'
        example: 1
      pref_name_enabled:
        example: true
        type: boolean
      preferred_name:
        example: Raaj
        type: string
      preferred_ois:
        example: RP
        type: string
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
    type: object
  user_flag.Request:
    properties:
      no_staff_log_entry_id:
        example: 1
        type: integer
      no_staff_role:
        example: false
        type: boolean
      no_training:
        example: false
        type: boolean
      no_training_log_entry_id:
        example: 1
        type: integer
      no_transferring:
        example: false
        type: boolean
      no_transferring_log_entry_id:
        example: 1
        type: integer
      no_visiting:
        example: false
        type: boolean
      no_visiting_log_entry_id:
        example: 1
        type: integer
      used_transfer_override:
        example: false
        type: boolean
    type: object
  user_flag.Response:
    properties:
      cid:
        example: 1293257
        type: integer
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      no_staff_log_entry_id:
        example: 1
        type: integer
      no_staff_role:
        example: false
        type: boolean
      no_training:
        example: false
        type: boolean
      no_training_log_entry_id:
        example: 1
        type: integer
      no_transferring:
        example: false
        type: boolean
      no_transferring_log_entry_id:
        example: 1
        type: integer
      no_visiting:
        example: false
        type: boolean
      no_visiting_log_entry_id:
        example: 1
        type: integer
      updated_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      used_transfer_override:
        example: false
        type: boolean
    type: object
  user_role.Request:
    properties:
      facility_id:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      role_id:
        allOf:
        - $ref: '#/definitions/constants.RoleID'
        example: ATM
    required:
    - facility_id
    - role_id
    type: object
  user_role.Response:
    properties:
      created_at:
        example: "2021-01-01T00:00:00Z"
        type: string
      facility_id:
        allOf:
        - $ref: '#/definitions/constants.FacilityID'
        example: ZDV
      role_id:
        allOf:
        - $ref: '#/definitions/constants.RoleID'
        example: ATM
    type: object
  utils.ErrResponse:
    properties:
      code:
        description: application-specific error code
        type: integer
      error:
        description: application-level error message, for debugging
        type: string
      status:
        description: user-level status message
        type: string
    type: object
info:
  contact:
    email: vatusa6@vatusa.net
    name: VATUSA Support
    url: http://www.swagger.io/support
  description: VATUSAs public API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: VATUSA API
  version: "0.1"
paths:
  /facility:
    get:
      consumes:
      - application/json
      description: Get all facilities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/facility.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get all facilities
      tags:
      - facility
  /facility/{FacilityID}:
    get:
      consumes:
      - application/json
      description: Get information for a specific facility
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a specific facility
      tags:
      - facility
    patch:
      consumes:
      - application/json
      description: Patch a facility
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Facility
        in: body
        name: facility
        required: true
        schema:
          $ref: '#/definitions/facility.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a facility
      tags:
      - facility
    put:
      consumes:
      - application/json
      description: Update a facility
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Facility
        in: body
        name: facility
        required: true
        schema:
          $ref: '#/definitions/facility.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a facility
      tags:
      - facility
  /facility/{FacilityID}/faq:
    get:
      consumes:
      - application/json
      description: List all FAQs
      parameters:
      - description: Facility ID
        in: query
        name: FacilityID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/faq.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all FAQs
      tags:
      - faq
    post:
      consumes:
      - application/json
      description: Create a new FAQ
      parameters:
      - description: FAQ
        in: body
        name: faq
        required: true
        schema:
          $ref: '#/definitions/faq.Request'
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new FAQ
      tags:
      - faq
  /facility/{FacilityID}/faq/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a FAQ
      tags:
      - faq
    patch:
      consumes:
      - application/json
      description: Patch a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: FAQ
        in: body
        name: faq
        required: true
        schema:
          $ref: '#/definitions/faq.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a FAQ
      tags:
      - faq
    put:
      consumes:
      - application/json
      description: Update a FAQ
      parameters:
      - description: FAQ ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: FAQ
        in: body
        name: faq
        required: true
        schema:
          $ref: '#/definitions/faq.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/faq.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a FAQ
      tags:
      - faq
  /facility/{FacilityID}/feedback:
    get:
      consumes:
      - application/json
      description: List feedback entries
      parameters:
      - description: Facility ID
        in: path
        name: facility
        required: true
        type: string
      - description: CID
        in: query
        name: cid
        type: integer
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/feedback.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List feedback entries
      tags:
      - feedback
    post:
      consumes:
      - application/json
      description: Create a new feedback entry
      parameters:
      - description: Facility ID
        in: path
        name: facility
        required: true
        type: string
      - description: Feedback Entry
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/feedback.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/feedback.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new feedback entry
      tags:
      - feedback
  /facility/{FacilityID}/feedback/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      - description: Facility ID
        in: path
        name: facility
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a feedback entry
      tags:
      - feedback
    patch:
      consumes:
      - application/json
      description: Patch a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      - description: Facility ID
        in: path
        name: facility
        required: true
        type: string
      - description: Feedback Entry
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/feedback.Request'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a feedback entry
      tags:
      - feedback
    put:
      consumes:
      - application/json
      description: Update a feedback entry
      parameters:
      - description: Feedback ID
        in: path
        name: id
        required: true
        type: integer
      - description: Facility ID
        in: path
        name: facility
        required: true
        type: string
      - description: Feedback Entry
        in: body
        name: feedback
        required: true
        schema:
          $ref: '#/definitions/feedback.Request'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a feedback entry
      tags:
      - feedback
  /facility/{FacilityID}/log:
    get:
      consumes:
      - application/json
      description: List facility log entries
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List facility log entries
      tags:
      - facility-log
    post:
      consumes:
      - application/json
      description: Create a new facility log entry
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Facility Log Entry
        in: body
        name: facility_log
        required: true
        schema:
          $ref: '#/definitions/facility_log.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/facility_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new facility log entry
      tags:
      - facility-log
  /facility/{FacilityID}/log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a facility log entry
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a facility log entry
      tags:
      - facility-log
    patch:
      consumes:
      - application/json
      description: Patch a facility log entry
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility Log Entry
        in: body
        name: facility_log
        required: true
        schema:
          $ref: '#/definitions/facility_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a facility log entry
      tags:
      - facility-log
    put:
      consumes:
      - application/json
      description: Update a facility log entry
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Facility Log Entry ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility Log Entry
        in: body
        name: facility_log
        required: true
        schema:
          $ref: '#/definitions/facility_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a facility log entry
      tags:
      - facility-log
  /facility/{FacilityID}/news:
    get:
      consumes:
      - application/json
      description: List all news entries
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/news.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all news entries
      tags:
      - news
    post:
      consumes:
      - application/json
      description: Create a new news entry
      parameters:
      - description: News Entry
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.Request'
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new news entry
      tags:
      - news
  /facility/{FacilityID}/news/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a news entry
      tags:
      - news
    patch:
      consumes:
      - application/json
      description: Patch a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      - description: News Entry
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.Request'
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a news entry
      tags:
      - news
    put:
      consumes:
      - application/json
      description: Update a news entry
      parameters:
      - description: News ID
        in: path
        name: id
        required: true
        type: string
      - description: News Entry
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.Request'
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a news entry
      tags:
      - news
  /facility/{FacilityID}/reset-api-key:
    post:
      consumes:
      - application/json
      description: Regenerate an API key
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/facility.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Regenerate an API key
      tags:
      - facility
  /facility/{FacilityID}/roster:
    get:
      consumes:
      - application/json
      description: Get rosters by facility
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Type
        enum:
        - home
        - visiting
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roster.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get rosters by facility
      tags:
      - roster
    post:
      consumes:
      - application/json
      description: Adds a user to a roster
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Roster
        in: body
        name: roster
        required: true
        schema:
          $ref: '#/definitions/roster.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/roster.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Add user to roster
      tags:
      - roster
  /facility/{FacilityID}/roster-request:
    get:
      consumes:
      - application/json
      description: List all roster requests
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Type
        enum:
        - visiting
        - transferring
        in: query
        name: type
        type: string
      - description: Status
        enum:
        - pending
        - accepted
        - rejected
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roster_request.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all roster requests
      tags:
      - roster-request
    post:
      consumes:
      - application/json
      description: Create a new roster request
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Roster Request
        in: body
        name: roster_request
        required: true
        schema:
          $ref: '#/definitions/roster_request.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/roster_request.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new roster request
      tags:
      - roster-request
  /facility/{FacilityID}/roster-request/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a roster request
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Roster Request ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a roster request
      tags:
      - roster-request
    patch:
      consumes:
      - application/json
      description: Patch a roster request
      parameters:
      - description: Roster Request ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Roster Request
        in: body
        name: roster_request
        required: true
        schema:
          $ref: '#/definitions/roster_request.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roster_request.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a roster request
      tags:
      - roster-request
    put:
      consumes:
      - application/json
      description: Update a roster request
      parameters:
      - description: Roster Request ID
        in: path
        name: id
        required: true
        type: string
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Roster Request
        in: body
        name: roster_request
        required: true
        schema:
          $ref: '#/definitions/roster_request.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roster_request.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a roster request
      tags:
      - roster-request
  /facility/{FacilityID}/roster/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a roster
      parameters:
      - description: Facility ID
        in: path
        name: FacilityID
        required: true
        type: string
      - description: Roster ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a roster
      tags:
      - roster
  /user/:
    get:
      consumes:
      - application/json
      description: Get information for the user logged in
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get your user
      tags:
      - user
  /user/{cid}:
    get:
      consumes:
      - application/json
      description: Get information for the user
      parameters:
      - description: CID
        in: path
        name: CID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a specific user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Patch information for the user
      parameters:
      - description: CID
        in: path
        name: CID
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update information for the user
      parameters:
      - description: CID
        in: path
        name: CID
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a user
      tags:
      - user
  /user/{cid}/action-log:
    get:
      consumes:
      - application/json
      description: List all action log entries
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/action_log.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get all action log entries
      tags:
      - action-log
    post:
      consumes:
      - application/json
      description: Create a new action log entry
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Action Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/action_log.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new action log entry
      tags:
      - action-log
  /user/{cid}/action-log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an action log entry
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete an action log entry
      tags:
      - action-log
    patch:
      consumes:
      - application/json
      description: Patch an action log entry
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Action Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/action_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch an action log entry
      tags:
      - action-log
    put:
      consumes:
      - application/json
      description: Update an action log entry
      parameters:
      - description: Action Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Action Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/action_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/action_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update an action log entry
      tags:
      - action-log
  /user/{cid}/disciplinary-log:
    get:
      consumes:
      - application/json
      description: List all disciplinary log entries
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: VATUSA Only
        in: query
        name: vatusa_only
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/disciplinary_log.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get all disciplinary log entries
      tags:
      - disciplinary-log
    post:
      consumes:
      - application/json
      description: Create a new disciplinary log entry
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Disciplinary Log Entry
        in: body
        name: action_log
        required: true
        schema:
          $ref: '#/definitions/disciplinary_log.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new disciplinary log entry
      tags:
      - disciplinary-log
  /user/{cid}/disciplinary-log/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a disciplinary log entry
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a disciplinary log entry
      tags:
      - disciplinary-log
    patch:
      consumes:
      - application/json
      description: Patch an disciplinary log entry
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Disciplinary Log Entry
        in: body
        name: disciplinary_log
        required: true
        schema:
          $ref: '#/definitions/disciplinary_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch an disciplinary log entry
      tags:
      - disciplinary-log
    put:
      consumes:
      - application/json
      description: Update a disciplinary log entry
      parameters:
      - description: Disciplinary Log Entry ID
        in: path
        name: id
        required: true
        type: integer
      - description: Disciplinary Log Entry
        in: body
        name: disciplinary_log
        required: true
        schema:
          $ref: '#/definitions/disciplinary_log.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/disciplinary_log.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a disciplinary log entry
      tags:
      - disciplinary-log
  /user/{cid}/feedback:
    get:
      consumes:
      - application/json
      description: Get feedback entries for a user
      parameters:
      - description: CID
        in: path
        name: CID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/feedback.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get accepted feedback entries for a user
      tags:
      - feedback
  /user/{cid}/notification:
    get:
      consumes:
      - application/json
      description: List all notifications
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/notification.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List all notifications
      tags:
      - notification
  /user/{cid}/notification/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a notification
      tags:
      - notification
    patch:
      consumes:
      - application/json
      description: Patch a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      - description: Notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/notification.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a notification
      tags:
      - notification
    put:
      consumes:
      - application/json
      description: Update a notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      - description: Notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/notification.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/notification.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a notification
      tags:
      - notification
  /user/{cid}/rating-change:
    get:
      consumes:
      - application/json
      description: List rating changes
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rating_change.Response'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: List rating changes
      tags:
      - rating-change
    post:
      consumes:
      - application/json
      description: Create a new rating change
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Rating Change
        in: body
        name: rating_change
        required: true
        schema:
          $ref: '#/definitions/rating_change.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new rating change
      tags:
      - rating-change
  /user/{cid}/rating-change/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a rating change
      parameters:
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a rating change
      tags:
      - rating-change
    patch:
      consumes:
      - application/json
      description: Patch a rating change
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      - description: Rating Change
        in: body
        name: rating_change
        required: true
        schema:
          $ref: '#/definitions/rating_change.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a rating change
      tags:
      - rating-change
    put:
      consumes:
      - application/json
      description: Update a rating change
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Rating Change ID
        in: path
        name: id
        required: true
        type: integer
      - description: Rating Change
        in: body
        name: rating_change
        required: true
        schema:
          $ref: '#/definitions/rating_change.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rating_change.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a rating change
      tags:
      - rating-change
  /user/{cid}/role:
    post:
      consumes:
      - application/json
      description: Create a new user role
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: User Role
        in: body
        name: user_role
        required: true
        schema:
          $ref: '#/definitions/user_role.Request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_role.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Create a new user role
      tags:
      - user-roles
  /user/{cid}/role/:
    get:
      consumes:
      - application/json
      description: Get roles for the user logged in
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_role.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get your roles
      tags:
      - user-roles
  /user/{cid}/role/{role_id}:
    delete:
      consumes:
      - application/json
      description: Remove a user role
      parameters:
      - description: User CID
        in: path
        name: cid
        required: true
        type: integer
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Remove a user role
      tags:
      - user-roles
  /user/{cid}/roster:
    get:
      consumes:
      - application/json
      description: Get rosters by user
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roster.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get rosters by user
      tags:
      - roster
  /user/{cid}/user-flag:
    delete:
      consumes:
      - application/json
      description: Delete a user flag
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Delete a user flag
      tags:
      - user-flag
    get:
      consumes:
      - application/json
      description: Get a user flag
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_flag.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Get a user flag
      tags:
      - user-flag
    patch:
      consumes:
      - application/json
      description: Patch a user flag
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: User Flag
        in: body
        name: user_flag
        required: true
        schema:
          $ref: '#/definitions/user_flag.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_flag.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Patch a user flag
      tags:
      - user-flag
    put:
      consumes:
      - application/json
      description: Update a user flag
      parameters:
      - description: CID
        in: path
        name: cid
        required: true
        type: integer
      - description: User Flag
        in: body
        name: user_flag
        required: true
        schema:
          $ref: '#/definitions/user_flag.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_flag.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrResponse'
      summary: Update a user flag
      tags:
      - user-flag
swagger: "2.0"
